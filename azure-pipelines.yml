name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yy)$(DayOfYear).$(BuildCounter)

parameters: 
  - name: ContinueEvenIfResourcesAreGettingDestroyed
    displayName: "Continue even if resources are getting destroyed"
    type: boolean
    default: false
  - name: disableStryker
    displayName: "Disable Stryker"
    type: boolean
    default: false
  - name: DisableDependencyCheck
    displayName: "Disable OWASP dependency checking"
    type: boolean
    default: false

trigger:
  - main
  - release/*
  - develop

pool: 
    name: NautilusBuild
    demands: vs_16 -equals 1 #exclude agents 13 and 14 as code coverage report fails

variables:
  - name: BuildConfiguration
    value: "release"
  - name: BuildPlatform
    value: "any cpu"
  - name: BuildCounter
    value: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  - name: UKHOAssemblyCompany
    value: "UK Hydrographic Office"
  - name: UKHOAssemblyVersionPrefix
    value: "1.0."
  - name: UKHOAssemblyProduct
    value: "Periodic Output Service"
  - name: UKHOAssemblyCopyright
    value: "Copyright Â© UK Hydrographic Office"
  - name: DeploymentPool
    value: "Mare Nectaris"
  - name: Container
    value: "ukhydrographicoffice/terraform-azure-powershell-unzip:1.9.6"
  - name: WindowPool
    value: "NautilusBuild"
  - name: SdkVersion
    value: "8.0.x"

resources:
  repositories:
  - repository: UKHOTemplates
    type: github
    name: UKHO/devops-pipelinetemplates
    endpoint: UKHO
    ref: refs/heads/main

stages:
  - stage: Stryker_Mutator
    displayName: "Stryker Mutator"
    condition: ${{ eq(parameters.disableStryker, false) }}
    dependsOn: []
    variables:
    - name: StrykerDotNetVersion
      value: 8.0.x
    jobs:
    - job: Stryker
      workspace:
        clean: all
      steps:
        - task: UseDotNet@2
          displayName: 'Use .NET SDK for Stryker'
          inputs:
            packageType: sdk
            version: $(StrykerDotNetVersion)

        - task: DotNetCoreCLI@2
          displayName: "Install Stryker"
          inputs:
            command: custom
            custom: tool
            workingDirectory: $(Agent.TempDirectory)
            arguments: install dotnet-stryker --tool-path $(Agent.BuildDirectory)/tools

        - task: Powershell@2
          displayName: "Run Stryker"
          inputs:
            workingDirectory: '$(Build.SourcesDirectory)\UKHO.PeriodicOutputService'
            targetType: 'inline'
            pwsh: true
            script: $(Agent.BuildDirectory)/tools/dotnet-stryker

        - task: PublishMutationReport@1
          displayName: 'Publish Stryker Mutator Report'
          inputs:
            reportPattern: '**/mutation-report.html'

  - stage: BuildTestPublish
    displayName: "Build, test and publish"
    dependsOn: []
    jobs:
    - template: Deployment/templates/build-test-publish.yml  
      parameters:
        DisableDependencyCheck: ${{ parameters.DisableDependencyCheck }}
        DotNetVersion: '8.0.x'

  - stage: Devdeploy
    displayName: "Devdeploy (inc terraform, webapp deploy)"
    variables:
      - name: Environment
        value: "dev"
      - template: Deployment/templates/variables.yml
        parameters:
          Environment: ${{variables.Environment}}
    jobs:
      - template: Deployment/templates/app-deploy.yml
        parameters:
          Environment: ${{variables.Environment}}
          ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
          AzureSubscription: "Exchange-Set-Service-Dev-A-008-02"
          Container: ${{variables.Container}}
      
  - stage: QAdeploy
    dependsOn: Devdeploy
    displayName: "QAdeploy (inc terraform, webapp deploy)"
    variables:
      - name: Environment
        value: "qa"
      - template: Deployment/templates/variables.yml
        parameters:
          Environment: ${{variables.Environment}}
    jobs:
      - template: Deployment/templates/app-deploy.yml
        parameters:
          Environment: ${{variables.Environment}}
          ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
          AzureSubscription: "Exchange-Set-Service-QA-A-008-02"
          Container: ${{variables.Container}} 

  - stage: Livedeploy
    displayName: "Livedeploy (inc terraform, webapp deploy)"
    variables:
      - name: Environment
        value: "Live"
      - template: Deployment/templates/variables.yml
        parameters:
          Environment: ${{variables.Environment}}
    jobs:
      - template: Deployment/templates/app-deploy.yml
        parameters:
          Environment: ${{variables.Environment}}
          ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
          AzureSubscription: "Exchange-Set-Service-Live-A-008-02"
          Container: ${{variables.Container}} 
   
      - job: PostDeploymentActions
        dependsOn:
        - DeployApp
        - Setup
        - CheckInfra
        - CheckFSS
        - CheckESS      
        pool: $(WindowPool)        
        displayName: Post Deployment Actions
        steps:
          - template: Deployment/templates/retain-pipeline.yml

  - stage: vNextIATDeploy
    dependsOn: 
      - Devdeploy
    displayName: vNext IAT Deploy (inc terraform, webapp deploy)
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/dev/')))
    variables:
      - name: Environment
        value: "vnextiat"
      - template: Deployment/templates/variables.yml
        parameters:
          Environment: ${{variables.Environment}}
    jobs:
      - template: Deployment/templates/app-deploy.yml
        parameters:
          Environment: ${{variables.Environment}}
          ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
          AzureSubscription: "Exchange-Set-Service-vNext-IAT-A.011.08"
          Container: ${{variables.Container}} 

  - stage: vnexte2eDeploy
    dependsOn: 
       - vNextIATDeploy
    displayName: vNext E2E Deploy (inc terraform, webapp deploy)
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    variables:
      - name: Environment
        value: "vnexte2e"
      - template: Deployment/templates/variables.yml
        parameters:
          Environment: ${{variables.Environment}}
    jobs:
      - template: Deployment/templates/app-deploy.yml
        parameters:
          Environment: ${{variables.Environment}}
          ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
          AzureSubscription: "Exchange-Set-Service-vNext-E2E-A.011.08"
          Container: ${{variables.Container}}

  - stage: IatDeploy
    dependsOn: 
       - Devdeploy
    displayName: IAT Deploy (inc terraform, webapp deploy)
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/dev/')))
    variables:
      - name: Environment
        value: "iat"
      - template: Deployment/templates/variables.yml
        parameters:
          Environment: ${{variables.Environment}}
    jobs:
      - template: Deployment/templates/app-deploy.yml
        parameters:
          Environment: ${{variables.Environment}}
          ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
          AzureSubscription: "Exchange-Set-Service-IAT-A.011.08"
          Container: ${{variables.Container}}
          
  - stage: PreprodDeploy
    dependsOn: 
      - IatDeploy
    displayName: PreProd Deploy (inc terraform, webapp deploy)
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/dev/')))
    variables:
      - name: Environment
        value: "preprod"
      - template: Deployment/templates/variables.yml
        parameters:
          Environment: ${{variables.Environment}}
    jobs:
      - template: Deployment/templates/app-deploy.yml
        parameters:
          Environment: ${{variables.Environment}}
          ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
          AzureSubscription: "Exchange-Set-Service-Pre-A.011.08"
          Container: ${{variables.Container}} 
