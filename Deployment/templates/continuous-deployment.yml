parameters:
  - name: ContinueEvenIfResourcesAreGettingDestroyed
    type: boolean
    default: false
  - name: AzureSubscription
    type: string
  - name: RunTests
    type: boolean
    default: false

steps:
  - task: PowerShell@2
    displayName: "Terraform $(Environment)deploy"
    name: TerraformDeploy
    inputs:
      targetType: filePath
      filePath: '$(Pipeline.Workspace)/terraformartifact/terraform_conditional_run.ps1'
      arguments: '-deploymentResourceGroupName $(DeploymentResourceGroupName) -deploymentStorageAccountName $(DeploymentStorageAccountName) -workSpace $(Environment) -continueEvenIfResourcesAreGettingDestroyed $${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }} -terraformJsonOutputFile $(Pipeline.Workspace)/terraformartifact/terraform_output.json -elasticApmServerUrl $(ElasticAPM_ServerURL) -elasticApmApiKey $(ElasticAPM_ApiKey)'
    env:
      ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
      ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
      ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)
      ARM_SUBSCRIPTION_ID: $(TERRAFORM-SUBSCRIPTION-ID)
      TF_VAR_agent_rg: $(agentRG)
      TF_VAR_agent_vnet_name: $(agentVnetName)
      TF_VAR_agent_subscription_id: $(agentSubscriptionId)
      TF_VAR_spoke_rg: $(spokeRG)
      TF_VAR_spoke_vnet_name: $(spokeVnetName)
      TF_VAR_spoke_subnet_name: $(POSESSspokeSubnetName)
      TF_VAR_mock_spoke_subnet_name: $(POSESSmockspokeSubnetName)
      TF_VAR_allowed_ips: $(whiteListedIps)
      TF_VAR_permitdecryptionhardwareid: $(PermitDecryptionHardwareId)
      TF_VAR_agent_2204_subnet: $(agent2204SubnetId)
      TF_VAR_agent_prd_subnet: $(agentprdSubnetId)
      TF_VAR_BessContainerName: $(BessContainerForWebjob)
      TF_VAR_aio_weekly_business_unit: $(AioJobIdWeekly.BusinessUnit)      
      TF_VAR_aio_weekly_job_id: $(AioJobIdWeekly)      
      TF_VAR_aio_weekly_read_users: $(AioJobIdWeekly.ReadUser)
      TF_VAR_aio_weekly_read_group: $(AioJobIdWeekly.ReadGroup)
      TF_VAR_aio_printing_job_id: $(AioJobIdPrinting)      
      TF_VAR_aio_printing_business_unit: $(AioJobIdPrinting.BusinessUnit)
      TF_VAR_aio_printing_read_users: $(AioJobIdPrinting.ReadUser)      
      TF_VAR_aio_printing_read_group: $(AioJobIdPrinting.ReadGroup)

  - task: FileTransform@2
    displayName: "File Transform: Mock API WebApp"
    inputs:
      folderPath: '$(Pipeline.Workspace)/MockWebAPI/*.zip'
      xmlTransformationRules:
      jsonTargetFiles: '**/appsettings.json'

  - task: AzureCLI@2
    condition: ${{parameters.RunTests}}
    displayName: "Mock API WebApp deployment"
    inputs:
      azureSubscription: "${{ parameters.AzureSubscription }}"
      scriptType: 'pscore'
      scriptLocation: 'scriptPath'
      scriptPath: '$(Pipeline.Workspace)/terraformartifact/mock_api_deployment.ps1'
      arguments: '-mockWebAppName $(mockWebAppName) -mockApipackagePath "$(Pipeline.Workspace)/MockWebAPI/UKHO.FmEssFssMock.API.zip" -mockWebAppResourceGroup $(mockWebAppResourceGroup)'

  - task: AzureCLI@2
    condition: ${{parameters.RunTests}}
    displayName: "PKSMock API WebApp deployment"
    inputs:
      azureSubscription: "${{ parameters.AzureSubscription }}"
      scriptType: 'pscore'
      scriptLocation: 'scriptPath'
      scriptPath: '$(Pipeline.Workspace)/terraformartifact/mock_api_deployment.ps1'
      arguments: '-mockWebAppName $(pksMockWebAppName) -mockApipackagePath "$(Pipeline.Workspace)/PKSWireMockWebAPI/UKHO.PKSWireMockService.API.zip" -mockWebAppResourceGroup $(mockWebAppResourceGroup)'

  - task: FileTransform@2
    displayName: "File Transform: POS Config"
    inputs:
      folderPath: '$(Pipeline.Workspace)/PeriodicOutputService/*.zip'
      xmlTransformationRules:
      jsonTargetFiles: | 
        **/POS*/appsettings.json
        **/BESS*/appsettings.json        

  - bash: |
      echo "##vso[task.setvariable variable=schedule]$(AioJobIdWeekly.Schedule)"
      echo "##vso[task.setvariable variable=AioJobId]$(AioJobIdWeekly)"
      echo "##vso[task.setvariable variable=AzureStorageConfiguration.AioProductVersionDetailsTableName]$(AioJobIdWeekly.AioProductVersionDetailsTableName)"
      echo "##vso[task.setvariable variable=FSSApiConfiguration.AioBusinessUnit]$(AioJobIdWeekly.BusinessUnit)"
      echo "##vso[task.setvariable variable=FSSApiConfiguration.AioPosReadGroups]$(AioJobIdWeekly.ReadGroup)"
      echo "##vso[task.setvariable variable=FSSApiConfiguration.AioPosReadUsers]$(AioJobIdWeekly.ReadUser)"
      echo "##vso[task.setvariable variable=WeeksToIncrement]$(AioJobIdWeekly.WeeksToIncrement)"
    displayName: "Set AIO weekly job variables"

  - task: FileTransform@2   
    displayName: "File Transform: AIO weekly settings Config"
    inputs:
      folderPath: '$(Pipeline.Workspace)/PeriodicOutputService/*.zip'
      xmlTransformationRules:
      jsonTargetFiles: |
        **/AIOFulfilmentWebJob/settings.job
        **/AIOFulfilmentWebJob/appsettings.json
  
  - bash: |
      echo "##vso[task.setvariable variable=schedule]$(AioJobIdPrinting.Schedule)"
      echo "##vso[task.setvariable variable=AioJobId]$(AioJobIdPrinting)"
      echo "##vso[task.setvariable variable=AzureStorageConfiguration.AioProductVersionDetailsTableName]$(AioJobIdPrinting.AioProductVersionDetailsTableName)"
      echo "##vso[task.setvariable variable=FSSApiConfiguration.AioBusinessUnit]$(AioJobIdPrinting.BusinessUnit)"
      echo "##vso[task.setvariable variable=FSSApiConfiguration.AioPosReadGroups]$(AioJobIdPrinting.ReadGroup)"
      echo "##vso[task.setvariable variable=FSSApiConfiguration.AioPosReadUsers]$(AioJobIdPrinting.ReadUser)"
      echo "##vso[task.setvariable variable=WeeksToIncrement]$(AioJobIdPrinting.WeeksToIncrement)"
    displayName: "Set AIO printing job variables"
    
  - task: FileTransform@2   
    displayName: "File Transform: AIO printing settings Config"
    inputs:
      folderPath: '$(Pipeline.Workspace)/PeriodicOutputService/*.zip'
      xmlTransformationRules:
      jsonTargetFiles: |
        **/AIOFulfilmentWebJobPrinting/settings.job
        **/AIOFulfilmentWebJobPrinting/appsettings.json

  - task: AzureWebApp@1
    displayName: "Azure LXS App Deploy: pos-$(Environment)-lxs-webapp"
    inputs:
      azureSubscription: "${{ parameters.AzureSubscription }}"
      appType: webApp
      appName: "$(WEB_APP_NAME)"
      package: "$(Pipeline.Workspace)/PeriodicOutputService/PeriodicOutputFulfilmentService.zip"
